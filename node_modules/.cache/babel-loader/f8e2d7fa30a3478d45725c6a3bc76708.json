{"ast":null,"code":"var _jsxFileName = \"/home/vision/development/assignments/module-3/rolling-dice-react-state/rolling-dice/src/App.js\";\nimport React, { Component } from \"react\";\nimport DiceBox from \"./DiceBox\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      numbers: [1, 2, 3, 4, 5, 6]\n    };\n    this.randomNumber = this.randomNumber.bind;\n  }\n\n  randomNumber() {\n    this.setState(prevState => {\n      return {\n        numbers: Math.floor(Math.random * prevState.numbers)\n      };\n    });\n  } // randomNum = () => this.setState(prevState => ({Math.floor(Math.random * prevState.numbers)} )) \n\n\n  render() {\n    const dice = this.state.numbers.map(number => /*#__PURE__*/_jsxDEV(DiceBox, {\n      number: number\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 59\n    }, this));\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [dice, /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.randomNum,\n        children: \"press\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 17\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/vision/development/assignments/module-3/rolling-dice-react-state/rolling-dice/src/App.js"],"names":["React","Component","DiceBox","App","constructor","state","numbers","randomNumber","bind","setState","prevState","Math","floor","random","render","dice","map","number","randomNum"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,OAAP,MAAoB,WAApB;;;AAEA,MAAMC,GAAN,SAAkBF,SAAlB,CAA4B;AACxBG,EAAAA,WAAW,GAAG;AACV;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,OAAO,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB;AADA,KAAb;AAGA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAtC;AACH;;AAEDD,EAAAA,YAAY,GAAE;AACV,SAAKE,QAAL,CAAcC,SAAS,IAAI;AACvB,aAAO;AACHJ,QAAAA,OAAO,EAAEK,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,GAAcH,SAAS,CAACJ,OAAnC;AADN,OAAP;AAGH,KAJD;AAKH,GAfuB,CAgBxB;;;AAEIQ,EAAAA,MAAM,GAAG;AACL,UAAMC,IAAI,GAAG,KAAKV,KAAL,CAAWC,OAAX,CAAmBU,GAAnB,CAAuBC,MAAM,iBAAI,QAAC,OAAD;AAAS,MAAA,MAAM,EAAEA;AAAjB;AAAA;AAAA;AAAA;AAAA,YAAjC,CAAb;AACA,wBACI;AAAA,iBACCF,IADD,eAEA;AAAQ,QAAA,OAAO,EAAE,KAAKG,SAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAMP;;AA1BuB;;AA4B5B,eAAef,GAAf","sourcesContent":["import React, { Component } from \"react\"\r\nimport DiceBox from \"./DiceBox\"\r\n\r\nclass App extends Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            numbers: [1, 2, 3, 4, 5, 6]\r\n        }\r\n        this.randomNumber = this.randomNumber.bind\r\n    }\r\n    \r\n    randomNumber(){\r\n        this.setState(prevState => {\r\n            return {\r\n                numbers: Math.floor(Math.random * prevState.numbers)\r\n            }\r\n        })\r\n    }\r\n    // randomNum = () => this.setState(prevState => ({Math.floor(Math.random * prevState.numbers)} )) \r\n\r\n        render() {\r\n            const dice = this.state.numbers.map(number => <DiceBox number={number} />)\r\n            return (\r\n                <div>\r\n                {dice}\r\n                <button onClick={this.randomNum}>press</button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default App"]},"metadata":{},"sourceType":"module"}