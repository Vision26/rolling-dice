{"ast":null,"code":"var _jsxFileName = \"/home/vision/development/assignments/module-3/rolling-dice-react-state/rolling-dice/src/App.js\";\nimport React, { Component } from \"react\";\nimport DiceBox from \"./DiceBox\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      numbers: [1, 2, 3, 4, 5, 6]\n    };\n\n    this.random = () => Math.floor(Math.random() * 6);\n  }\n\n  rollDice() {\n    // this.setState(prevState => {\n    //     return {\n    //         numbers: Math.floor(Math.random() * prevState.numbers)\n    //     }\n    // })\n    console.log(this.random);\n  } // randomNum = () => this.setState(prevState => ({Math.floor(Math.random * prevState.numbers)} )) \n\n\n  render() {\n    const dice = this.state.numbers.map((number, index) => /*#__PURE__*/_jsxDEV(DiceBox, {\n      number: number\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 68\n    }, this));\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [dice, /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.rollDice,\n        children: \"press\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 17\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/vision/development/assignments/module-3/rolling-dice-react-state/rolling-dice/src/App.js"],"names":["React","Component","DiceBox","App","state","numbers","random","Math","floor","rollDice","console","log","render","dice","map","number","index"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,OAAP,MAAoB,WAApB;;;AAEA,MAAMC,GAAN,SAAkBF,SAAlB,CAA4B;AAAA;AAAA;AAAA,SACpBG,KADoB,GACZ;AACJC,MAAAA,OAAO,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB;AADL,KADY;;AAAA,SAMxBC,MANwB,GAMf,MAAMC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACD,MAAL,KAAgB,CAA3B,CANS;AAAA;;AAQxBG,EAAAA,QAAQ,GAAE;AACN;AACA;AACA;AACA;AACA;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKL,MAAjB;AACH,GAfuB,CAgBxB;;;AAEIM,EAAAA,MAAM,GAAG;AACL,UAAMC,IAAI,GAAG,KAAKT,KAAL,CAAWC,OAAX,CAAmBS,GAAnB,CAAuB,CAACC,MAAD,EAASC,KAAT,kBAAmB,QAAC,OAAD;AAAqB,MAAA,MAAM,EAAED;AAA7B,OAAcC,KAAd;AAAA;AAAA;AAAA;AAAA,YAA1C,CAAb;AACA,wBACI;AAAA,iBACCH,IADD,eAEA;AAAQ,QAAA,OAAO,EAAE,KAAKJ,QAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAMP;;AA1BuB;;AA4B5B,eAAeN,GAAf","sourcesContent":["import React, { Component } from \"react\"\r\nimport DiceBox from \"./DiceBox\"\r\n\r\nclass App extends Component {\r\n        state = {\r\n            numbers: [1, 2, 3, 4, 5, 6]\r\n        }\r\n    \r\n\r\n    random = () => Math.floor(Math.random() * 6)\r\n    \r\n    rollDice(){\r\n        // this.setState(prevState => {\r\n        //     return {\r\n        //         numbers: Math.floor(Math.random() * prevState.numbers)\r\n        //     }\r\n        // })\r\n        console.log(this.random)\r\n    }\r\n    // randomNum = () => this.setState(prevState => ({Math.floor(Math.random * prevState.numbers)} )) \r\n\r\n        render() {\r\n            const dice = this.state.numbers.map((number, index) => <DiceBox key={index} number={number} />)\r\n            return (\r\n                <div>\r\n                {dice}\r\n                <button onClick={this.rollDice}>press</button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default App"]},"metadata":{},"sourceType":"module"}