{"ast":null,"code":"var _jsxFileName = \"/home/vision/development/assignments/module-3/rolling-dice-react-state/rolling-dice/src/DiceBox.js\";\nimport React, { Component } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass DiceBox extends Component {\n  constructor() {\n    super();\n\n    this.randomNum = () => this.setState(prevState => ({\n      numbers: Math.floor(Math.random() * prevState.numbers)\n    }));\n\n    this.state = {\n      numbers: [1, 2, 3, 4, 5, 6]\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.randomNum,\n        children: \"press\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default DiceBox;","map":{"version":3,"sources":["/home/vision/development/assignments/module-3/rolling-dice-react-state/rolling-dice/src/DiceBox.js"],"names":["React","Component","DiceBox","constructor","randomNum","setState","prevState","numbers","Math","floor","random","state","render"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;;;AAEA,MAAMC,OAAN,SAAsBD,SAAtB,CAA+B;AAC3BE,EAAAA,WAAW,GAAE;AACT;;AADS,SAMbC,SANa,GAMD,MAAM,KAAKC,QAAL,CAAcC,SAAS,KAAK;AAACC,MAAAA,OAAO,EAAEC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBJ,SAAS,CAACC,OAArC;AAAV,KAAL,CAAvB,CANL;;AAET,SAAKI,KAAL,GAAa;AACTJ,MAAAA,OAAO,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB;AADA,KAAb;AAGH;;AAEDK,EAAAA,MAAM,GAAE;AACJ,wBACI;AAAA,6BACI;AAAQ,QAAA,OAAO,EAAE,KAAKR,SAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAKH;;AAd0B;;AAiB/B,eAAeF,OAAf","sourcesContent":["import React, {Component} from \"react\"\r\n\r\nclass DiceBox extends Component{\r\n    constructor(){\r\n        super()\r\n        this.state = {\r\n            numbers: [1, 2, 3, 4, 5, 6]\r\n        }\r\n    }\r\n    randomNum = () => this.setState(prevState => ({numbers: Math.floor(Math.random() * prevState.numbers)}))\r\n    render(){\r\n        return(\r\n            <div>\r\n                <button onClick={this.randomNum}>press</button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default DiceBox"]},"metadata":{},"sourceType":"module"}